{"version":3,"sources":["images/logo.png","images/rickymorty.png","components/Header.js","components/Filters.js","components/CharacterCard.js","components/CharacterList.js","components/CharacterDetails.js","components/Loader.js","components/App.js","services/FetchCharacter.js","index.js"],"names":["module","exports","Header","className","src","logo","alt","Filters","props","handleStatus","ev","inputStatus","target","value","action","onSubmit","preventDefault","htmlFor","type","placeholder","onChange","handleSearch","inputValue","state","name","checked","specie","icon","faRedditAlien","faUserCheck","faStar","handleSpecie","inputSpecie","onClick","handleReset","faTrash","CharacterCard","characters","Fragment","map","character","id","image","species","route","key","to","CharacterList","filteredCharacters","length","faLaughWink","CharacterDetails","origin","episode","status","isAlien","faThumbsUp","faSkullCrossbones","faQuestionCircle","Loader","color","height","width","App","setState","renderCharDetails","routeId","parseInt","match","params","find","item","undefined","loading","fetch","then","resp","json","respData","results","charData","this","search","inputEarth","filter","toLowerCase","includes","console","log","exact","path","render","React","Component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.e40abe95.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.75509f2e.png\";","module.exports = __webpack_public_path__ + \"static/media/rickymorty.6f618031.png\";","import React from 'react';\nimport logo from '../images/logo.png';\nimport '../stylesheets/header.scss'\nimport PropTypes from 'prop-types';\n\n\nfunction Header() {\n  return (\n    <div className='header-container'>\n      <img src={logo} alt=\"logo\" className='logo img-fluid' />\n    </div>\n  )\n}\n\nHeader.propTypes = {\n  handleSearch: PropTypes.func\n}\n\nexport default Header;","import React from 'react';\nimport '../stylesheets/filter.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faRedditAlien } from '@fortawesome/free-brands-svg-icons';\nimport { faUserCheck, faStar, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport PropTypes from 'prop-types';\n\n\nfunction Filters(props) {\n  const handleSubmit = (ev) => {\n    ev.preventDefault();\n  }\n  const handleSearch = (ev) => {\n    props.handleSearch({\n      inputValue: ev.target.value\n    })\n  }\n  const handleStatus = (ev) => {\n    props.handleStatus({\n      inputStatus: ev.target.value\n    })\n  }\n  const handleSpecie = (ev) => {\n    props.handleSpecie({\n      inputSpecie: ev.target.value\n    })\n  }\n\n  const icon = () => {\n    if (props.specie === 'Alien') {\n      return <FontAwesomeIcon icon={faRedditAlien} />\n    } else if (props.specie === 'Human') {\n      return <FontAwesomeIcon icon={faUserCheck} />\n    } else {\n      return <FontAwesomeIcon icon={faStar} />\n    }\n  }\n\n  return (\n    < div className='filter__container' >\n      <form action='' onSubmit={handleSubmit}>\n\n        <div className='filter__searchName'>\n          <label className='filter__label' htmlFor=\"buscar\">Busca tu personaje</label>\n          <input\n            type=\"text\"\n            placeholder='Ej. MariCarmen'\n            className='filter__input'\n            onChange={handleSearch}\n            value={props.state} />\n        </div>\n\n        <div className='filter__status'>\n          <label className='filter__label'>Estado: </label>\n          <label\n            htmlFor=\"status\"\n            className='label-value mr-2 ml-2' >Vivo</label>\n          <input\n            type=\"radio\"\n            name='status'\n            value='Alive'\n            onChange={handleStatus}\n            checked={props.checked === 'Alive'} />\n          <label\n            htmlFor=\"status\"\n            className='label-value mr-2 ml-4' >Muerto</label>\n          <input\n            type=\"radio\"\n            name='status'\n            value='Dead'\n            onChange={handleStatus}\n            checked={props.checked === 'Dead'} />\n          <label\n            htmlFor=\"status\"\n            className='label-value mr-2 ml-4'>Desconocido</label>\n          <input type=\"radio\"\n            name='status'\n            value='unknown'\n            onChange={handleStatus}\n            checked={props.checked === 'unknown'} />\n          <label\n            htmlFor=\"status\"\n            className='label-value mr-2 ml-4' >Todos</label>\n          <input\n            type=\"radio\"\n            name='status'\n            value=''\n            onChange={handleStatus}\n            checked={props.checked === ''} />\n        </div>\n\n        <div className='filter__specie'>\n          <label className='filter__label'>Especie: {icon()} </label>\n          <select\n            className='filter__input'\n            onChange={handleSpecie}\n            value={props.specie}>\n            <option\n              value=\"\"\n            >Todos </option>\n            <option\n              value=\"Human\"\n            >Humano</option>\n            <option\n              value=\"Alien\"\n            >Alien  </option>\n          </select>\n        </div>\n\n        <button className='reset mt-2'\n          onClick={props.handleReset}>RESET  <FontAwesomeIcon icon={faTrash} className='reset__icon mt-1' /> </button>\n      </form>\n    </div >\n  )\n}\nFilters.propTypes = {\n  handleSearch: PropTypes.func\n}\n\n\nexport default Filters;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport '../stylesheets/cards.scss';\nimport PropTypes from 'prop-types';\n\n\nfunction CharacterCard(props) {\n  const { characters } = props\n\n  return (\n    <React.Fragment>\n      {characters.map(character => {\n        const { id, image, name, species } = character\n        const route = `/char/${id}`\n        return (\n\n          <li key={id} className='card p-3 m-2 col-5 col-sm-3 col-lg-2 text-center ' >\n            <img className='card__img card-img-top' src={image} alt={name} />\n            <h5 className='card__title card-title pt-4'>Nombre: {name}</h5>\n            <p className='card__info card-text'>Especie: {species}</p>\n            <Link to={route}>\n              <button className='card__btn '>Más info</button>\n            </Link>\n          </li>\n\n        )\n      })}\n    </React.Fragment>\n  )\n}\nCharacterCard.propTypes = {\n  characters: PropTypes.arrayOf(PropTypes.object)\n}\nexport default CharacterCard;","import React from 'react';\nimport CharacterCard from './CharacterCard';\nimport '../stylesheets/list.scss';\nimport image from '../images/rickymorty.png'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLaughWink } from '@fortawesome/free-solid-svg-icons';\nimport PropTypes from 'prop-types';\n\n\nfunction CharacterList(props) {\n  const { filteredCharacters } = props\n\n  if (filteredCharacters.length === 0) {\n    return <div className='notFound'>\n      <p className='notFound__info'>Oh oh...no hemos encontrado a tu personaje... <br />¡Inténtalo de nuevo! <FontAwesomeIcon icon={faLaughWink} /></p> <img className='notFound__image img-fluid' src={image} alt='Imagen Rick y Morty' />\n    </div>\n  } else {\n    return (\n      <div className='container'>\n        <ul className='row container__list justify-content-center'>\n          <CharacterCard characters={filteredCharacters} />\n        </ul>\n      </div>\n    )\n  }\n\n}\nCharacterList.propTypes = {\n  filteredCharacters: PropTypes.arrayOf(PropTypes.object)\n}\n\nexport default CharacterList;","import React from 'react';\nimport '../stylesheets/details.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faRedditAlien } from '@fortawesome/free-brands-svg-icons';\nimport { faUserCheck, faSkullCrossbones, faQuestionCircle, faThumbsUp } from '@fortawesome/free-solid-svg-icons';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\n\n\nfunction CharacterDetails(props) {\n  const { name, image, species, origin, episode, status } = props.characters\n\n  const isAlien = species === 'Alien' ? <FontAwesomeIcon icon={faRedditAlien} /> : <FontAwesomeIcon icon={faUserCheck} />\n\n  const whatStatus = () => {\n    if (status === 'Alive') {\n      return <FontAwesomeIcon icon={faThumbsUp} />\n    } else if (status === 'Dead') {\n      return <FontAwesomeIcon icon={faSkullCrossbones} />\n    } else {\n      return <FontAwesomeIcon icon={faQuestionCircle} />\n    }\n  }\n\n  return (\n    < ul >\n      < li className='detail'>\n        <h2 className='detail__name'>{name}</h2>\n        <div className='detail__container'>\n          <img className='detail__img img-fluid' src={image} alt={name} />\n          <div className='detail__info'>\n            <p className='detail__specie'>Especie: {species} {isAlien}</p>\n            <p className='detail__planet'>Planeta de origen: {origin.name}</p>\n            <p className='detail__episodes'>Nº Episodios: {episode.length}</p>\n            <p className='detail__status'>Estado: {status} {whatStatus()}</p>\n          </div>\n        </div>\n        <Link to='/'>\n          <button className='detail__btn '>Volver</button>\n        </Link>\n      </ li>\n    </ul >\n  )\n}\n\nCharacterDetails.propTypes = {\n  characters: PropTypes.object.isRequired\n}\n\nexport default CharacterDetails;","\nimport React from 'react';\nimport ReactLoading from 'react-loading';\n\n\nconst Loader = ({ color }) => (\n  <ReactLoading type={'spinningBubbles'} color={color} height={1000} width={100} className='loader' />\n);\n\n\nexport default Loader;","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport FetchCharacter from '../services/FetchCharacter';\nimport Header from './Header';\nimport Filters from './Filters';\nimport CharacterList from './CharacterList';\nimport CharacterDetails from './CharacterDetails';\nimport Loader from './Loader';\nimport '../stylesheets/App.scss';\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      characters: [],\n      inputValue: '',\n      inputStatus: '',\n      checked: '',\n      inputSpecie: '',\n      loading: true\n    }\n  }\n\n  componentDidMount() {\n    FetchCharacter().then(charData => {\n      if (charData === undefined) {\n        this.setState({\n          loading: true\n        })\n      } else {\n        this.setState({\n          characters: charData,\n          loading: false\n        })\n      }\n    }\n    )\n  }\n\n  //handler\n\n  handleSearch = (inputValue) => {\n    this.setState(\n      inputValue\n    )\n  }\n\n  handleStatus = (inputStatus) => {\n    this.setState(\n      inputStatus,\n    )\n  }\n\n  handleSpecie = (inputSpecie) => {\n    this.setState(\n      inputSpecie\n    )\n  }\n\n  handleReset = () => {\n    this.setState({\n      inputValue: '',\n      inputStatus: '',\n      inputSpecie: '',\n    }\n    )\n  }\n\n  //filter\n\n  filteredCharacters() {\n    const characters = [...this.state.characters]\n    const status = this.state.inputStatus\n    const search = this.state.inputValue\n    const specie = this.state.inputSpecie\n    const earth = this.state.inputEarth\n    return characters\n      .filter(character => {\n        return character.name.toLowerCase().includes(search.toLowerCase())\n      })\n      .filter(character => {\n        return status === '' ? true : character.status === status\n      })\n      .filter(character => {\n        return specie === '' ? true : character.species === specie\n      })\n  }\n\n\n  //render\n\n  renderCharDetails = (props) => {\n    const routeId = parseInt(props.match.params.id);\n    const character = this.state.characters.find(item => {\n      return item.id === routeId\n    })\n    if (character === undefined) {\n      return <p>El personaje no existe</p>\n    } else {\n      return <CharacterDetails\n        characters={character} />\n    }\n  }\n\n  render() {\n    console.log(this.state.inputEarth)\n    return (\n      <div className=\"app-container\">\n        {this.state.loading\n          ? (<Loader />)\n          : (<>\n            <Header\n              handleSearch={this.handleSearch}\n            />\n            <Switch>\n              <Route exact path='/'>\n                <Filters\n                  handleSearch={this.handleSearch}\n                  handleStatus={this.handleStatus}\n                  handleSpecie={this.handleSpecie}\n                  handleReset={this.handleReset}\n                  state={this.state.inputValue}\n                  checked={this.state.inputStatus}\n                  specie={this.state.inputSpecie}\n                />\n                <CharacterList\n                  filteredCharacters={this.filteredCharacters()} />\n              </Route>\n              <Route path='/char/:id' render={this.renderCharDetails}>\n              </Route>\n            </Switch>\n          </>)\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const ENDPOINT = 'https://raw.githubusercontent.com/Adalab/rick-y-morty/master/data/rick-y-morty.json'\n\nexport default () => {\n  return fetch(ENDPOINT)\n    .then(resp => resp.json()\n      .then(respData => respData.results))\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport { HashRouter } from 'react-router-dom';\n\n\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>, document.getElementById('root'));\n\n\n"],"sourceRoot":""}