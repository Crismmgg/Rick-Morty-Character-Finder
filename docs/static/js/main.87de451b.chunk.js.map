{"version":3,"sources":["images/logo.png","images/rickymorty.png","components/Filters.js","components/Header.js","components/CharacterCard.js","components/CharacterList.js","components/CharacterDetails.js","components/Loader.js","components/App.js","services/FetchCharacter.js","index.js"],"names":["module","exports","Filters","props","className","htmlFor","type","placeholder","onChange","ev","handleSearch","inputValue","target","value","console","log","Header","src","logo","alt","CharacterCard","characters","Fragment","map","character","id","image","name","species","route","key","to","CharacterList","filteredCharacters","length","icon","faLaughWink","CharacterDetails","origin","episode","status","isAlien","faRedditAlien","faUserCheck","faThumbsUp","faSkullCrossbones","faQuestionCircle","Loader","color","height","width","App","setState","renderCharDetails","routeId","parseInt","match","params","state","find","item","undefined","loading","fetch","then","resp","json","respData","results","charData","this","filter","toLowerCase","includes","exact","path","render","React","Component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.87de451b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.75509f2e.png\";","module.exports = __webpack_public_path__ + \"static/media/rickymorty.6f618031.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../stylesheets/filter.scss'\n\n\nfunction Filters(props) {\n  const handleSearch = (ev) => {\n    props.handleSearch({\n      inputValue: ev.target.value\n    })\n    console.log(props)\n  }\n  return (\n    <div className='filter__container'>\n      <label className='filter__label' htmlFor=\"buscar\">Busca tu personaje</label>\n      <input\n        type=\"text\"\n        placeholder='Ej. MariCarmen'\n        className='filter__input'\n        onChange={handleSearch} />\n    </div>\n  )\n}\nFilters.propTypes = {\n  handleSearch: PropTypes.func\n}\n\n\nexport default Filters;","import React from 'react';\nimport Filters from './Filters';\nimport logo from '../images/logo.png';\nimport PropTypes from 'prop-types';\nimport '../stylesheets/header.scss'\n\n\nfunction Header(props) {\n  return (\n    <div className='header-container'>\n      <img src={logo} alt=\"logo\" className='logo img-fluid' />\n      <Filters handleSearch={props.handleSearch} />\n    </div>\n  )\n}\n\nHeader.propTypes = {\n  handleSearch: PropTypes.func\n}\n\nexport default Header;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport '../stylesheets/cards.scss';\nimport PropTypes from 'prop-types';\n\n\nfunction CharacterCard(props) {\n  const { characters } = props\n\n  return (\n    <React.Fragment>\n      {characters.map(character => {\n        const { id, image, name, species } = character\n        const route = `/char/${id}`\n        return (\n          <React.Fragment>\n            <li key={id} className='card p-3 m-2 col-5 col-sm-3 col-lg-2 text-center ' >\n              <img className='card__img card-img-top' src={image} alt={name} />\n              <h5 className='card__title card-title pt-4'>Nombre: {name}</h5>\n              <p className='card__info card-text'>Especie: {species}</p>\n              <Link to={route}>\n                <button className='card__btn '>Más info</button>\n              </Link>\n            </li>\n          </React.Fragment>\n        )\n      })}\n    </React.Fragment>\n  )\n}\nCharacterCard.propTypes = {\n  characters: PropTypes.arrayOf(PropTypes.object)\n}\nexport default CharacterCard;","import React from 'react';\nimport CharacterCard from './CharacterCard';\nimport '../stylesheets/list.scss';\nimport image from '../images/rickymorty.png'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLaughWink } from '@fortawesome/free-solid-svg-icons';\n\nimport PropTypes from 'prop-types';\n\n\nfunction CharacterList(props) {\n  const { filteredCharacters } = props\n  if (filteredCharacters.length === 0) {\n    return <div className='notFound'>\n      <p className='notFound__info'>Oh oh...no hemos encontrado a tu personaje... <br />¡Inténtalo de nuevo! <FontAwesomeIcon icon={faLaughWink} /></p> <img className='notFound__image img-fluid' src={image} alt='Imagen Rick y Morty' />\n    </div>\n  } else {\n    return (\n      <div className='container'>\n        <ul className='row container__list justify-content-center'>\n          <CharacterCard characters={filteredCharacters} />\n        </ul>\n      </div>\n    )\n  }\n\n}\nCharacterList.propTypes = {\n  filteredCharacters: PropTypes.arrayOf(PropTypes.object)\n}\n\nexport default CharacterList;","import React from 'react';\nimport '../stylesheets/details.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faRedditAlien } from '@fortawesome/free-brands-svg-icons';\nimport { faUserCheck, faSkullCrossbones, faQuestionCircle, faThumbsUp } from '@fortawesome/free-solid-svg-icons';\n\n\nimport { Link } from 'react-router-dom';\n\nimport PropTypes from 'prop-types';\n\n\n\nfunction CharacterDetails(props) {\n  const { name, image, species, origin, episode, status } = props.characters\n  const isAlien = species === 'Alien' ? <FontAwesomeIcon icon={faRedditAlien} /> : <FontAwesomeIcon icon={faUserCheck} />\n  const whatStatus = () => {\n    if (status === 'Alive') {\n      return <FontAwesomeIcon icon={faThumbsUp} />\n    } else if (status === 'Dead') {\n      return <FontAwesomeIcon icon={faSkullCrossbones} />\n    } else {\n      return <FontAwesomeIcon icon={faQuestionCircle} />\n    }\n  }\n\n  return (\n    < ul >\n      < li className='detail'>\n        <h2 className='detail__name'>{name}</h2>\n        <div className='detail__container'>\n          <img className='detail__img img-fluid' src={image} alt={name} />\n          <div className='detail__info'>\n            <p className='detail__specie'>Especie: {species} {isAlien}</p>\n            <p className='detail__planet'>Planeta de origen: {origin.name}</p>\n            <p className='detail__episodes'>Nº Episodios: {episode.length}</p>\n            <p className='detail__status'>Estado: {status} {whatStatus()}</p>\n          </div>\n        </div>\n        <Link to='/'>\n          <button className='detail__btn '>Volver</button>\n        </Link>\n      </ li>\n    </ul >\n  )\n}\n\nCharacterDetails.propTypes = {\n  characters: PropTypes.object.isRequired\n}\n\nexport default CharacterDetails;","\nimport React from 'react';\nimport ReactLoading from 'react-loading';\n\n\nconst Loader = ({ color }) => (\n  <ReactLoading type={'spinningBubbles'} color={color} height={1000} width={100} className='loader' />\n);\n\n\nexport default Loader;","import React from 'react';\nimport '../stylesheets/app.scss';\nimport { Route, Switch } from 'react-router-dom';\nimport FetchCharacter from '../services/FetchCharacter';\nimport Header from './Header';\nimport CharacterList from './CharacterList';\nimport CharacterDetails from './CharacterDetails';\nimport Loader from './Loader';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      characters: [],\n      inputValue: '',\n      loading: true\n    }\n  }\n\n  componentDidMount() {\n    FetchCharacter().then(charData => {\n      if (charData === undefined) {\n        this.setState({\n          loading: true\n        })\n      } else {\n        this.setState({\n          characters: charData,\n          loading: false\n        })\n      }\n    }\n    )\n  }\n\n  //handler\n\n  handleSearch = (inputValue) => {\n    this.setState({\n      inputValue\n    })\n    console.log(inputValue)\n  }\n\n  //filter\n\n  filteredCharacters() {\n    const characters = [...this.state.characters]\n    if (this.state.inputValue === '') {\n      return characters\n    } else {\n      return characters.filter(character => {\n        return character.name.toLowerCase().includes(this.state.inputValue.inputValue.toLowerCase())\n      }\n      )\n    }\n  }\n\n  //render\n\n  renderCharDetails = (props) => {\n    const routeId = parseInt(props.match.params.id);\n    console.log(routeId)\n    const character = this.state.characters.find(item => {\n      return item.id === routeId\n    })\n    console.log(routeId, this.state.characters, character)\n    if (character === undefined) {\n      return <p>El personaje no existe</p>\n    } else {\n      return <CharacterDetails\n        characters={character} />\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"app-container\">\n        {this.state.loading\n          ? (<Loader />)\n          : (<>\n            <Header\n              handleSearch={this.handleSearch}\n            />\n            <Switch>\n              <Route exact path='/'>\n                <CharacterList\n                  filteredCharacters={this.filteredCharacters()} />\n              </Route>\n              <Route path='/char/:id' render={this.renderCharDetails}>\n              </Route>\n            </Switch>\n          </>)\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const ENDPOINT = 'https://raw.githubusercontent.com/Adalab/rick-y-morty/master/data/rick-y-morty.json'\n\nexport default () => {\n  return fetch(ENDPOINT)\n    .then(resp => resp.json()\n      .then(respData => respData.results))\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport { HashRouter } from 'react-router-dom';\n\n\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>, document.getElementById('root'));\n\n\n"],"sourceRoot":""}